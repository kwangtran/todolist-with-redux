{"version":3,"sources":["actions/index.js","constants/ActionTypes.js","components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","helpers/IDHelper.js","mocks/data.js","App.js","serviceWorker.js","reducers/tasks.js","reducers/isDisplayForm.js","reducers/itemEditting.js","reducers/filterTable.js","reducers/search.js","reducers/sort.js","reducers/index.js","index.js"],"names":["editTask","task","type","TaskForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","event","target","name","value","JSON","parse","setState","defineProperty","onCloseForm","onSave","preventDefault","onSaveTask","state","onClear","status","id","itemEditting","nextProps","isDisplayForm","react_default","a","createElement","className","style","float","onClick","onSubmit","required","Component","connect","ownProps","dispatch","actions","Search","onChangeKeyword","onSearchKeyword","console","log","onSearch","keyword","placeholder","Sort","sortBy","sortValue","onSort","by","_this2","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","sort","Control","components_Search","components_Sort","TaskItem","onDelete","onDeleteTask","onChangeStatus","onUpdateStatus","onEditTask","onOpenForm","_this$props","index","TaskList","handleChange","checked","filter","filterName","filterStatus","onFilterTable","tasks","filterTable","toLowerCase","indexOf","b","elmTasks","map","components_TaskItem","key","onUpdate","search","generateID","s4","Math","floor","random","toString","substring","App","onToggleForm","onClearTask","taskEditing","localStorage","getItem","setItem","stringify","components_TaskForm","onGenerateData","Control_Control","components_TaskList","Boolean","window","location","hostname","match","data","initialState","randomID","findIndex","result","forEach","myReducer","arguments","length","undefined","action","push","toConsumableArray","objectSpread","splice","parseInt","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a9800a3.chunk.js","sourcesContent":["import * as types from '../constants/ActionTypes'\r\nexport const listAll = () => {\r\n    return {\r\n        type: types.LIST_ALL\r\n    }\r\n}\r\n\r\nexport const saveTask = (task) => {\r\n    return {\r\n        type: types.SAVE_TASK,\r\n        task: task\r\n    }\r\n}\r\n\r\nexport const toggleForm = () => {\r\n    return {\r\n        type: types.TOGGLE_FORM,\r\n    }\r\n}\r\n\r\nexport const closeForm = () => {\r\n    return {\r\n        type: types.CLOSE_FORM,\r\n    }\r\n}\r\nexport const openForm = () => {\r\n    return {\r\n        type: types.OPEN_FORM,\r\n    }\r\n}\r\n\r\nexport const updateStatus = (id) => {\r\n    return {\r\n        type: types.UPDATE_STATUS_TASK,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const deletetask = (id) => {\r\n    return {\r\n        type: types.DELETE_TASK,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const editTask = (task) => {\r\n    return {\r\n        type: types.EDIT_TASK,\r\n        task: task\r\n    }\r\n}\r\n\r\nexport const filterTask = (filter) => {\r\n    return {\r\n        type: types.FILTER_TABLE,\r\n        filter: filter\r\n    }\r\n}\r\nexport const searchTask = (keyword) => {\r\n    return {\r\n        type: types.SEARCH,\r\n        keyword\r\n    }\r\n}\r\nexport const sortTask = (sort) => {\r\n    return {\r\n        type: types.SORT,\r\n        sort\r\n    }\r\n}","export const LIST_ALL = 'LIST_ALL'\r\nexport const SAVE_TASK = 'SAVE_TASK'\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM'\r\nexport const OPEN_FORM = 'OPEN_FORM'\r\nexport const CLOSE_FORM = 'CLOSE_FORM'\r\nexport const UPDATE_STATUS_TASK = 'UPDATE_STATUS_TASK'\r\nexport const DELETE_TASK = 'DELETE_TASK'\r\nexport const EDIT_TASK = 'EDIT_TASK'\r\nexport const FILTER_TABLE = 'FILTER_TABLE'\r\nexport const SEARCH = 'SEARCH'\r\nexport const SORT = 'SORT'","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from '../actions/index'\r\nclass TaskForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            status: false\r\n        }\r\n    }\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        if (name === 'status') {\r\n            value = JSON.parse(value)\r\n        }\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n    onSave = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSaveTask(this.state)\r\n        //Cancel and close form\r\n        this.onClear()\r\n        this.onCloseForm();\r\n    }\r\n    onClear = () => {\r\n        this.setState((state, props) => ({\r\n            name: '',\r\n            status: false\r\n        }));\r\n    }\r\n    componentWillMount() {\r\n        // if (this.props.task) {\r\n        //     this.setState({\r\n        //         id: this.props.task.id,\r\n        //         name: this.props.task.name,\r\n        //         status: this.props.task.status,\r\n        //     });\r\n        // }\r\n        if (this.props.itemEditting) {\r\n            this.setState({\r\n                id: this.props.itemEditting.id,\r\n                name: this.props.itemEditting.name,\r\n                status: this.props.itemEditting.status,\r\n            });\r\n        } else {\r\n            this.onClear();\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps && nextProps.itemEditting) {\r\n            this.setState({\r\n                id: nextProps.itemEditting.id,\r\n                name: nextProps.itemEditting.name,\r\n                status: nextProps.itemEditting.status,\r\n            });\r\n        } else{\r\n            this.onClear();\r\n        }\r\n    }\r\n    render() {\r\n        var { id } = this.state;\r\n        if (!this.props.isDisplayForm) return null;\r\n        return (\r\n            <div className=\"panel panel-warning\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">{id !== '' ? 'Cập nhật công việc' : 'Thêm Công Việc'}\r\n                        <span style={{ float: \"right\" }} onClick={this.onCloseForm} className=\"fa fa-times-circle\"></span>\r\n                    </h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <form onSubmit={this.onSave}>\r\n                        <div className=\"form-group\">\r\n                            <label>Tên :</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </div>\r\n                        <label>Trạng Thái :</label>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            required=\"required\"\r\n                            name=\"status\"\r\n                            value={this.state.status}\r\n                            onChange={this.onChange}\r\n                        >\r\n                            <option value={true}>Kích Hoạt</option>\r\n                            <option value={false}>Ẩn</option>\r\n                        </select>\r\n                        <br />\r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\">{id !== '' ? 'Cập nhật' : 'Thêm'}</button>&nbsp;\r\n                     <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={this.onClear}\r\n                            >Hủy Bỏ</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isDisplayForm: state.isDisplayForm,\r\n        itemEditting: state.itemEditting\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onSaveTask: (task) => {\r\n            dispatch(actions.saveTask(task));\r\n        },\r\n        onCloseForm: () => {\r\n            dispatch(actions.closeForm())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword: ''\r\n        }\r\n    }\r\n    onChangeKeyword = (event) => {\r\n        var name = event.target.name;\r\n        var value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    onSearchKeyword = () => {\r\n        // this.props.onSearchKeyword(this.state.keyword);\r\n        console.log(this.state)\r\n        this.props.onSearch(this.state.keyword);\r\n    }\r\n    render() {\r\n        var { keyword } = this.state\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"input-group\">\r\n                    <input value={keyword} name=\"keyword\" onChange={this.onChangeKeyword} type=\"text\" className=\"form-control\" placeholder=\"Nhập từ khóa...\" />\r\n                    <span className=\"input-group-btn\">\r\n                        <button onClick={this.onSearchKeyword} className=\"btn btn-primary\" type=\"button\">\r\n                            <span className=\"fa fa-search mr-5\" />Tìm\r\n\t\t\t\t\t </button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        keyword: state.keyword\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onSearch: (keyword) => {\r\n            dispatch(actions.searchTask(keyword))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions/index'\r\n class Sort extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    onClick = (sortBy,sortValue) => {\r\n        // this.props.onSort(this.state.sort)\r\n        this.props.onSort({\r\n            by: sortBy,\r\n            value:sortValue\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                        Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\" />\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li onClick={() => this.onClick(\"name\", 1)}>\r\n                            <a\r\n                                role=\"button\"\r\n                                className={(this.props.sort.by === 'name' && this.props.sort.value === 1) ? 'sort-selected' : ''}\r\n                            >\r\n                                <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                    Tên A-Z\r\n                  </span>\r\n                            </a>\r\n                        </li>\r\n                        <li onClick={() => this.onClick(\"name\", -1)}>\r\n                            <a\r\n                                role=\"button\"\r\n                                className={(this.props.sort.by === 'name' && this.props.sort.value === -1) ? 'sort-selected' : ''}\r\n                            >\r\n                                <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                    Tên Z-A\r\n                  </span>\r\n                            </a>\r\n                        </li>\r\n                        <li role=\"separator\" className=\"divider\" />\r\n                        <li onClick={() => this.onClick(\"status\", 1)}>\r\n                            <a role=\"button\"\r\n                                className={(this.props.sort.by === 'status' && this.props.sort.value === 1) ? 'sort-selected' : ''}\r\n                            >Trạng Thái Kích Hoạt</a>\r\n                        </li>\r\n                        <li onClick={() => this.onClick(\"status\", -1)}>\r\n                            <a\r\n                                className={(this.props.sort.by === 'status' && this.props.sort.value === -1) ? 'sort-selected' : ''}\r\n                                role=\"button\">Trạng Thái Ẩn\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        sort: state.sort,\r\n        by: state.sort.by,\r\n        value: state.sort.value\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onSort: (sort) => {\r\n            dispatch(actions.sortTask(sort))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sort)","import React, { Component } from 'react'\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\nexport default class Control extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <Search />\r\n                <Sort    />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index'\r\nclass TaskItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    onDelete = () => {\r\n        this.props.onDeleteTask(this.props.task.id);\r\n        this.props.onCloseForm();\r\n    }\r\n    onChangeStatus = () => {\r\n        this.props.onUpdateStatus(this.props.task.id);;\r\n    }\r\n    onEditTask = () => {\r\n        this.props.onOpenForm();\r\n        this.props.onEditTask(this.props.task);\r\n    }\r\n\r\n    render() {\r\n        var { task, index } = this.props;\r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{task.name}</td>\r\n                <td className=\"text-center\" onClick={this.onChangeStatus}>\r\n                    <span className={task.status === true ? 'label label-success' : 'label label-danger'}>\r\n                        {task.status === true ? 'Kích hoạt' : 'Ẩn'}\r\n                    </span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button onClick={this.onEditTask} type=\"button\" className=\"btn btn-warning\">\r\n                        <span className=\"fa fa-pencil mr-5\" />Sửa\r\n                    </button>&nbsp;\r\n                 <button onClick={this.onDelete} type=\"button\" className=\"btn btn-danger\">\r\n                        <span className=\"fa fa-trash mr-5\" />Xóa\r\n                </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onUpdateStatus: (id) => {\r\n            dispatch(actions.updateStatus(id))\r\n        },\r\n        onDeleteTask: (id) => {\r\n            dispatch(actions.deletetask(id))\r\n        },\r\n        onCloseForm: () => {\r\n            dispatch(actions.closeForm())\r\n        },\r\n        onOpenForm: () => {\r\n            dispatch(actions.openForm())\r\n        },\r\n        onEditTask: (task) => {\r\n            dispatch(actions.editTask(task))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);","import React, { Component } from 'react'\r\nimport TaskItem from './TaskItem';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/index'\r\nimport { filter } from 'lodash'\r\nclass TaskList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterName: '',\r\n            filterStatus: -1\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.type === 'checkbox' ? target.checked : target.value;\r\n        var filter = {\r\n            name: name === 'filterName' ? value : this.state.filterName,\r\n            status: name === 'fitlerStatus' ? value : this.state.filterStatus\r\n        }\r\n        this.props.onFilterTable(filter)\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    render() {\r\n        var { tasks, filterTable, keyword, sort } = this.props;\r\n        //search by keyword\r\n        tasks = tasks.filter((task) => {\r\n            return task.name.toLowerCase().indexOf(keyword) !== -1\r\n        })\r\n\r\n        //sort \r\n        if (sort.by === 'name') {\r\n            tasks.sort((a, b) => {\r\n                if (a.name > b.name) return sort.value;\r\n                else if (a.name < b.name) return -sort.value;\r\n                return 0;\r\n            })\r\n        } else {\r\n            tasks.sort((a, b) => {\r\n                if (a.status > b.status) return -sort.value;\r\n                else if (a.status < b.status) return sort.value;\r\n                return 0;\r\n            })\r\n        }\r\n\r\n        //Filtertable\r\n        if (filterTable.name) {\r\n            tasks = tasks.filter((task) => {\r\n                return task.name.toLowerCase().indexOf(filterTable.name) !== -1\r\n            })\r\n\r\n        }\r\n        tasks = tasks.filter((task) => {\r\n            if (filterTable.status === -1) {\r\n                return task;\r\n            }\r\n            else {\r\n                return task.status === (filterTable.status === 1 ? true : false)\r\n            }\r\n        })\r\n        var elmTasks = tasks.map((task, index) => {\r\n            return <TaskItem\r\n                key={index}\r\n                task={task}\r\n                index={index}\r\n                onUpdate={this.props.onUpdate}\r\n            />\r\n        })\r\n        return (\r\n            <div className=\"row mt-15\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <table className=\"table table-bordered table-hover mt-40\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"text-center\">STT</th>\r\n                                <th className=\"text-center\">Tên</th>\r\n                                <th className=\"text-center\">Trạng Thái</th>\r\n                                <th className=\"text-center\">Hành Động</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td />\r\n                                <td>\r\n                                    <input\r\n                                        onChange={(event) => this.handleChange(event)}\r\n                                        // value={this.state.filterName}\r\n                                        name=\"filterName\"\r\n                                        type=\"text\"\r\n                                        className=\"form-control\" />\r\n                                </td>\r\n                                <td>\r\n                                    <select\r\n                                        onChange={(event) => this.handleChange(event)}\r\n                                        name=\"fitlerStatus\"\r\n                                        className=\"form-control\">\r\n                                        <option value={-1}>Tất Cả</option>\r\n                                        <option value={0}>Ẩn</option>\r\n                                        <option value={1}>Kích Hoạt</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td />\r\n                            </tr>\r\n                            {elmTasks}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        tasks: state.tasks,\r\n        filterTable: state.filterTable,\r\n        keyword: state.search,\r\n        sort: state.sort\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onFilterTable: (filter) => {\r\n            dispatch(actions.filterTask(filter))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","export const generateID = () => {\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4()\r\n\r\n}\r\n\r\nexport const s4 = () => {\r\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n}","import { generateID } from '../helpers/IDHelper'\r\nvar tasks = [\r\n    {\r\n        id: generateID(),\r\n        name: 'Học lập trình2',\r\n        status: true\r\n    },\r\n    {\r\n        id: generateID(),\r\n        name: 'Đi chơi',\r\n        status: false //0\r\n    },\r\n    {\r\n        id: generateID(),\r\n        name: 'Ngủ',\r\n        status: true\r\n    },\r\n]\r\nexport default tasks;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskForm from './components/TaskForm';\r\nimport Control from './components/Control';\r\nimport TaskList from './components/TaskList';\r\nimport tasks from './mocks/data'\r\nimport { generateID } from './helpers/IDHelper'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './actions/index'\r\nimport { filter } from 'lodash'\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttaskEditing: null\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tif (!localStorage.getItem('tasks')) {\r\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks))\r\n\t\t}\r\n\t\tthis.setState((state, props) => {\r\n\t\t\treturn {\r\n\t\t\t\ttasks: JSON.parse(localStorage.getItem('tasks'))\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tonToggleForm = () => {\r\n\t\tvar { itemEditting } = this.props\r\n\t\tif (itemEditting && itemEditting.id !== '') {\r\n\t\t\tthis.props.onOpenForm();\r\n\t\t} else {\r\n\t\t\tthis.props.onToggleForm();\r\n\t\t}\r\n\t\tthis.props.onClearTask({\r\n\t\t\tid: '',\r\n\t\t\tname: '',\r\n\t\t\tstatus: false\r\n\t\t});\r\n\t}\r\n\t// onShowForm = () => {\r\n\t// \tthis.setState((state, props) => (\r\n\t// \t\t{ isDisplayForm: true }\r\n\t// \t));\r\n\t// }\r\n\t// onUpdate = (id) => {\r\n\t// \tvar { tasks } = this.state;\r\n\t// \tvar index = this.findIndex(id);\r\n\t// \tvar taskEditing = tasks[index];\r\n\t// \tthis.setState({\r\n\t// \t\ttaskEditing: taskEditing\r\n\t// \t});\r\n\t// \tthis.onShowForm();\r\n\t// \tconsole.log(id);\r\n\t// }\r\n\t// findIndex(id) {\r\n\t// \tvar { tasks } = this.state;\r\n\t// \tvar result = -1;\r\n\t// \ttasks.forEach((task, index) => {\r\n\t// \t\tif (task.id === id) {\r\n\t// \t\t\tresult = index;\r\n\t// \t\t}\r\n\t// \t});\r\n\t// \treturn result;\r\n\t// }\r\n\t// onSort = (sortBy, sortValue) => {\r\n\t// \tthis.setState({\r\n\t// \t\tsortBy: sortBy,\r\n\t// \t\tsortValue: sortValue\r\n\t// \t})\r\n\t// }\r\n\trender() {\r\n\t\tvar { isDisplayForm } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t<h1>Quản Lý Công Việc</h1>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className={isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}>\r\n\t\t\t\t\t\t<TaskForm\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\tonClick={this.onToggleForm}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className=\"fa fa-plus mr-5\" />Thêm Công Việc\r\n\t\t\t  \t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={this.onGenerateData} type=\"button\" className=\"btn btn-danger\">\r\n\t\t\t\t\t\t\t<span className=\"fa fa-plus mr-5\" />Generate data\r\n\t\t\t  \t\t\t</button>\r\n\t\t\t\t\t\t<Control/>\r\n\t\t\t\t\t\t<TaskList />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn {\r\n\t\tisDisplayForm: state.isDisplayForm,\r\n\t\titemEditting: state.itemEditting\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n\treturn {\r\n\t\tonToggleForm: () => {\r\n\t\t\treturn dispatch(actions.toggleForm())\r\n\t\t},\r\n\t\tonClearTask: (task) => {\r\n\t\t\tdispatch(actions.editTask(task));\r\n\t\t},\r\n\t\tonOpenForm: () => {\r\n\t\t\tdispatch(actions.openForm())\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n// function App() {\r\n// \treturn (\r\n// \t\t<div className=\"container\">\r\n// \t\t\t<div className=\"text-center\">\r\n// \t\t\t\t<h1>Quản Lý Công Việc</h1>\r\n// \t\t\t\t<hr />\r\n// \t\t\t</div>\r\n// \t\t\t<div className=\"row\">\r\n// \t\t\t\t<div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n// \t\t\t\t\t{/* Form */}\r\n// \t\t\t\t\t<TaskForm />\r\n// \t\t\t\t</div>\r\n// \t\t\t\t<div className=\"col-xs-8 col-sm-8 col-md-8 col-lg-8\">\r\n// \t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">\r\n// \t\t\t\t\t\t<span className=\"fa fa-plus mr-5\" />Thêm Công Việc\r\n// \t\t  </button>\r\n// \t\t\t\t\t<Control />\r\n// \t\t\t\t\t<TaskList />\r\n// \t\t\t\t</div>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n\r\n// \t);\r\n// }\r\n\r\n// export default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../constants/ActionTypes';\r\n\r\nvar data = JSON.parse(localStorage.getItem('tasks'));\r\nvar initialState = data ? data : [];\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.LIST_ALL:\r\n            return state;\r\n        case types.SAVE_TASK:\r\n            var task = {\r\n                id: action.task.id,\r\n                name: action.task.name,\r\n                status: action.task.status,\r\n            }\r\n            if (!task.id) {\r\n                task.id = randomID();\r\n                state.push(task);\r\n\r\n            } else {\r\n                var index = findIndex(state, task.id);\r\n                state[index] = task;\r\n            }\r\n            localStorage.setItem('tasks', JSON.stringify(state));\r\n            return [...state];\r\n        case types.UPDATE_STATUS_TASK:\r\n            var index = findIndex(state, action.id);\r\n            state[index] = {\r\n                ...state[index],\r\n                status: !state[index].status\r\n            }\r\n            localStorage.setItem('tasks', JSON.stringify(state))\r\n            return [...state];\r\n        case types.DELETE_TASK:\r\n            var index = findIndex(state, action.id);\r\n            state.splice(index, 1)\r\n            localStorage.setItem('tasks', JSON.stringify(state))\r\n            return [...state];\r\n        case types.EDIT_TASK:\r\n            var index = findIndex(state, action.task.id);\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n}\r\n\r\nvar randomID = () => {\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4()\r\n\r\n}\r\n\r\nvar s4 = () => {\r\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n}\r\n\r\nvar findIndex = (tasks, id) => {\r\n    var result = -1;\r\n    tasks.forEach((task, index) => {\r\n        if (task.id === id) {\r\n            result = index;\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\n\r\nexport default myReducer;","import * as types from '../constants/ActionTypes';\r\n\r\nvar initialState = false;\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.TOGGLE_FORM:\r\n            return !state;\r\n        case types.CLOSE_FORM:\r\n            return false;\r\n        case types.OPEN_FORM:\r\n            return true;\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default myReducer;","import * as types from '../constants/ActionTypes';\r\n\r\nvar initialState = {\r\n    id: '',\r\n    name: '',\r\n    status: false\r\n}\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.EDIT_TASK:\r\n            return action.task;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default myReducer;","import * as types from '../constants/ActionTypes';\r\n\r\nvar initialState = {\r\n    name: '',\r\n    status: -1\r\n}\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.FILTER_TABLE:\r\n            return { ...action.filter, status: parseInt(action.filter.status, 10) };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default myReducer;","import * as types from '../constants/ActionTypes';\r\n\r\nvar initialState = ''\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.SEARCH:\r\n            return action.keyword;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default myReducer;","import * as types from '../constants/ActionTypes';\r\n\r\nvar initialState = {\r\n    by: 'name',\r\n    value: 1\r\n}\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.SORT:\r\n            return {\r\n                by: action.sort.by,\r\n                value: action.sort.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default myReducer;","import { combineReducers } from 'redux';\r\nimport tasks from './tasks';\r\nimport isDisplayForm from './isDisplayForm';\r\nimport itemEditting from './itemEditting';\r\nimport filterTable from './filterTable';\r\nimport search from './search';\r\nimport sort from './sort';\r\nconst myReducer = combineReducers({\r\n    tasks: tasks,\r\n    isDisplayForm,\r\n    itemEditting,\r\n    filterTable,\r\n    search,\r\n    sort\r\n});\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport myReducer from './reducers/index'\nimport { Provider } from 'react-redux';\nvar store = createStore(myReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}